menu "Common MuString settings"

config ALWAYS_INLINE
       bool "Enable always inline functions"
       default y
       help
       Some functions in kernel marked as always inline. This means
       that these functions will always be inline even if you disabled compiler
       optimisation. Note: disabling of this option is not a very good idea, but in some
       cases(for example for debugging) it may have a sense.

config CORESERVERS_PERCPU_LAUNCH
       bool "Perform initial per-cpu deployment of coreservers."
       default n
       help
       To test SMP kernel functionality, sometimes it is useful to make core servers
       occupy all available CPUs in system.

config CORESERVERS_LAUNCH_DELAY
       int "Delay (in system clock ticks) between launching next core server."
       range 500 3000
       default 500

menu "Task settings"

config AUTOREMOVE_ORPHANS
     bool "Automatically remove zombies whose parent is 1 (init)"
     default y
     help
     If this option is set, any process whose parent has become 1 as a result
     of its real parent termination, will be automatically removed from the list
     of processes upon calling 'exit()', and won't require to call 'wait()' against
     it.

endmenu

menu "Scheduler settings"

config TRACE_CURRENT
       bool "Trace TID of the current process for each CPU."
       default n
       help
       By turning this option on kernel stores TID of the currently executed task
       in a special array variable defined as follows:
            tid_t __current_cpu_task[CONFIG_NRCPUS]

config THREADS_PER_PROCESS
       int "Maximum number of threads for a userspace process."
       range 4  128
       default 64

endmenu

menu "Realtime timers"

config TIMER_RBTREE
       bool "RB-Tree based representation of active kernel timers"
       default n
       help
       By default, kernel keeps track of all active timers in a form of sorted list
       to eleminate rebalance cost. Such an approach is quite good if you are not
       going to have lots of active timers. But when number of active timers rises,
       cost of list traversing may affect realtime. In such a case, by turning this
       option on you will gain serious search benefits.

config TIMER_GRANULARITY
       int "Granularity of timer major tick"
       range 32 64 
       default "32"
       help
       Granularity (in timer tick) of major tick.

config CACHED_MAJOR_TICKS
       int "Initial number of cached major ticks"
       range 16 128
       default "16"
       help
       Initial number of major ticks in the cache. If kernel can't find an active
       major ticks to a timer being created, it first tries to get a free on from
       the cache.

config MIN_CACHED_MAJOR_TICKS
       int "Minimum number of cached major ticks in the cache"
       range 4 128
       default 4
       help
       Minimum number of cached major ticks in the cache. If the number of cached
       major ticks falls below this value, the process which made this value to
       reach this edge (as a result of adding a timer) will allocate a new cached
       entry.

config MAX_DEFERRED_IRQ_ACTIONS_PER_TICK
       int "Maximum amount of deferred actions fired at one time."
       range 1 512 
       default "32"
       help
       Maximum amount of deferred interrupt actions kernel fires per at one time tick.
       If more than such amount of deferred actions are ready for firing at the same time,
       the rest of these actions will be processed during the next suitable suituation.

config MAX_DEFERRED_USERSPACE_ACTIONS
       int "Maximum amount of deferred actions performed upon returning to userspace."
       range 1 32
       default "2"
endmenu

endmenu

menu   "Kernel consoles"
choice 
       prompt  "Kernel default console"
       default DEFCONS_VGA

config DEFCONS_VGA
       bool "VGA"
       help
         Standard VGA console

config DEFCONS_SERIAL
       bool "Serial"
       help
         "Serial console"
endchoice

choice 
      prompt "Kernel fault console"
      default FAULTCONS_VGA

config FAULTCONS_VGA
      bool "VGA"
      help
        Output fault to VGA

config FAULTCONS_SERIAL
      bool "Serial"
      help
        Print faults information to serial console
endchoice
endmenu

menu   "Fault processing"

config SEND_SIGSEGV_ON_FAULTS
       bool "Send SIGSEGV on memory/protection faults."
       default n
endmenu

menu   "Debug options"

config DEBUG
       bool "Enable general debugging."
       default n

config DEBUG_IRQ_ACTIVITY
       bool "Debug incoming hardware IRQs (also local timer and IPI) to debug console."
       depends on DEBUG_SERIAL_CONSOLE
       default n

config DUMP_USPACE_STACK
       bool "Dump user-space stack after any exception occurs"
       default n

config NUM_STACKWORDS
       int "Number of stack words that will be printed during the stack dump."
       range 5 50
       default "5"

endmenu

